{"version":3,"sources":["convertMoney.js","API/CartAPI.jsx","Cart/Component/ListCart.jsx","Cart/Cart.jsx"],"names":["convertMoney","money","str","output","count","i","length","CartAPI","getCarts","query","url","concat","axiosClient","get","postAddToCart","post","deleteToCart","delete","putToCart","put","postCheckNumberProduct","id","ListCart","props","listCart","onDeleteCart","onUpdateCount","handlerChangeText","e","console","log","target","value","_jsx","className","children","_jsxs","scope","map","index","Link","to","_id","src","img1","alt","width","name","price","style","cursor","onClick","handlerDown","getIdUser","getIdProduct","getCount","updateCount","parseInt","idUser","quantity","type","onChange","handlerUp","handlerDelete","getUser","getProduct","defaultProps","Cart","id_user","useSelector","state","cart","setCart","useState","total","setTotal","message","setMessage","dispatch","useDispatch","loadRedux","setLoadRedux","idProduct","loadAPI","setLoadAPI","getTotal","carts","sub_total","useEffect","localStorage","getItem","async","params","queryString","stringify","response","fetchData","redirect","setRedirect","fetchDelete","alertify","set","error","data","action","deleteCart","fetchPut","success","updateCart","color","Redirect","onCheckout","checkNumberOfProducts"],"mappings":"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","file":"static/js/7.2aae6980.chunk.js","sourcesContent":["export default function convertMoney(money) {\n\tconst str = money + \"\";\n\tlet output = \"\"\n\n\tlet count = 0;\n\tfor (let i = str.length - 1; i >= 0; i--) {\n\t\tcount++;\n\t\toutput = str[i] + output\n\n\t\tif (count % 3 === 0 && i !== 0) {\n\t\t\toutput = \".\" + output\n\t\t\tcount = 0;\n\t\t}\n\t}\n\n\treturn output;\n}\n","import axiosClient from \"./axiosClient\";\n\nconst CartAPI = {\n  getCarts: (query) => {\n    const url = `/carts${query}`;\n    return axiosClient.get(url);\n  },\n\n  postAddToCart: (query) => {\n    const url = `/carts/add${query}`;\n    return axiosClient.post(url);\n  },\n\n  deleteToCart: (query) => {\n    const url = `/carts/delete${query}`;\n    return axiosClient.delete(url);\n  },\n\n  putToCart: (query) => {\n    const url = `/carts/update${query}`;\n    return axiosClient.put(url);\n  },\n  postCheckNumberProduct: (id) => {\n    const url = `/carts/check`;\n    return axiosClient.post(url, id);\n  },\n};\n\nexport default CartAPI;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport convertMoney from \"../../convertMoney\";\n\nListCart.propTypes = {\n  listCart: PropTypes.array,\n  onDeleteCart: PropTypes.func,\n  onUpdateCount: PropTypes.func,\n};\n\nListCart.defaultProps = {\n  listCart: [],\n  onDeleteCart: null,\n  onUpdateCount: null,\n};\n\nfunction ListCart(props) {\n  const { listCart, onDeleteCart, onUpdateCount } = props;\n\n  const handlerChangeText = (e) => {\n    console.log(e.target.value);\n  };\n\n  const handlerDelete = (getUser, getProduct) => {\n    if (!onDeleteCart) {\n      return;\n    }\n\n    onDeleteCart(getUser, getProduct);\n  };\n\n  const handlerDown = (getIdUser, getIdProduct, getCount) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    if (getCount === 1) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateCount = parseInt(getCount) - 1;\n    console.log(\"updateCount\", updateCount);\n    onUpdateCount(getIdUser, getIdProduct, updateCount);\n  };\n\n  const handlerUp = (getIdUser, getIdProduct, getCount) => {\n    if (!onUpdateCount) {\n      return;\n    }\n\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updateCount = parseInt(getCount) + 1;\n    console.log(\"updateCOunt\", updateCount);\n    onUpdateCount(getIdUser, getIdProduct, updateCount);\n  };\n\n  return (\n    <div className=\"table-responsive mb-4\">\n      <table className=\"table\">\n        <thead className=\"bg-light\">\n          <tr className=\"text-center\">\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Image</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Product</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Price</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Quantity</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Total</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Remove</strong>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {listCart &&\n            listCart.map((value, index) => (\n              <tr className=\"text-center\" key={index}>\n                <td className=\"pl-0 border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor d-block animsition-link\"\n                      to={`/detail/${value._id}`}\n                    >\n                      <img src={value.img1} alt=\"...\" width=\"70\" />\n                    </Link>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor h6 animsition-link\"\n                      to={`/detail/${value._id}`}\n                    >\n                      {value.name}\n                    </Link>\n                  </div>\n                </td>\n\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">{convertMoney(value.price)} VND</p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <div className=\"quantity justify-content-center\">\n                    <button\n                      className=\"dec-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerDown(value.idUser, value._id, value.quantity)\n                      }\n                    >\n                      <i className=\"fas fa-caret-left\"></i>\n                    </button>\n                    <input\n                      className=\"form-control form-control-sm border-0 shadow-0 p-0\"\n                      type=\"text\"\n                      value={value.quantity}\n                      onChange={handlerChangeText}\n                    />\n                    <button\n                      className=\"inc-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        handlerUp(value.idUser, value._id, value.quantity)\n                      }\n                    >\n                      <i className=\"fas fa-caret-right\"></i>\n                    </button>\n                  </div>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(\n                      parseInt(value.price) * parseInt(value.quantity)\n                    )}{\" \"}\n                    VND\n                  </p>\n                </td>\n                <td className=\"align-middle border-0\">\n                  <a\n                    className=\"reset-anchor remove_cart\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => handlerDelete(value.idUser, value._id)}\n                  >\n                    <i className=\"fas fa-trash-alt small text-muted\"></i>\n                  </a>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ListCart;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteCart, updateCart } from \"../Redux/Action/ActionCart\";\nimport ListCart from \"./Component/ListCart\";\nimport alertify from \"alertifyjs\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport CartAPI from \"../API/CartAPI\";\nimport queryString from \"query-string\";\nimport convertMoney from \"../convertMoney\";\n\nfunction Cart(props) {\n  //id_user được lấy từ redux\n  const id_user = useSelector((state) => state.Cart.id_user);\n  console.log(\"id.ủe\", id_user);\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [cart, setCart] = useState([]);\n\n  const [total, setTotal] = useState();\n  const [message, setMessage] = useState();\n  const dispatch = useDispatch();\n\n  //State dùng để Load dữ liệu từ Redux\n  const [loadRedux, setLoadRedux] = useState({\n    idProduct: \"\",\n    count: \"\",\n  });\n\n  //State dùng để Load dữ liệu từ API\n  const [loadAPI, setLoadAPI] = useState(false);\n\n  //Hàm này dùng để Load dữ liệu ở Redux\n  //Khi người dùng chưa đăng nhập\n  useEffect(() => {\n    const fetchDataRedux = () => {\n      if (!localStorage.getItem(\"id_user\")) {\n        setCart(listCart);\n\n        getTotal(listCart);\n      }\n    };\n\n    fetchDataRedux();\n  }, [loadRedux]);\n\n  //Hàm này dùng để tính tổng tiền carts\n  function getTotal(carts) {\n    let sub_total = 0;\n\n    const sum_total = carts.map((value) => {\n      return (sub_total += parseInt(value.price) * parseInt(value.quantity));\n    });\n\n    setTotal(sub_total);\n  }\n\n  //Hàm này dùng để load dữ liệu từ API\n  //Khi người dùng đã đăng nhập\n  useEffect(() => {\n    const fetchData = async () => {\n      if (localStorage.getItem(\"id_user\")) {\n        const params = {\n          idUser: localStorage.getItem(\"id_user\"),\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        console.log(query);\n\n        const response = await CartAPI.getCarts(query);\n        console.log(response.cart);\n        setCart(response.cart);\n\n        getTotal(response.cart);\n      }\n    };\n\n    fetchData();\n\n    setLoadAPI(false);\n  }, [loadAPI]);\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onDeleteCart = (getUser, getProduct) => {\n    console.log(\"idUser: \" + getUser + \", idProduct: \" + getProduct);\n\n    if (localStorage.getItem(\"id_user\")) {\n      // user đã đăng nhập\n\n      //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n      const fetchDelete = async () => {\n        const params = {\n          idUser: getUser,\n          _id: getProduct,\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.deleteToCart(query);\n        console.log(response);\n      };\n\n      fetchDelete();\n\n      //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n      setLoadAPI(true);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n    } else {\n      // user chưa đăng nhập\n\n      //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n      const data = {\n        _id: getProduct,\n        idUser: getUser,\n      };\n\n      //Đưa dữ liệu vào Redux\n      const action = deleteCart(data);\n      dispatch(action);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\n\n      //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n      setLoadRedux({\n        _id: getProduct,\n        count: \"\",\n      });\n    }\n  };\n\n  //Hàm này dùng để truyền xuống cho component con xử và trả ngược dữ liệu lại component cha\n  const onUpdateCount = (getUser, getProduct, getCount) => {\n    console.log(\n      \"Count: \" +\n        getCount +\n        \", idUser: \" +\n        getUser +\n        \", idProduct: \" +\n        getProduct\n    );\n\n    if (localStorage.getItem(\"id_user\")) {\n      // user đã đăng nhập\n\n      //Sau khi nhận được dữ liệu ở component con truyền lên thì sẽ gọi API xử lý dữ liệu\n      const fetchPut = async () => {\n        const params = {\n          idUser: getUser,\n          _id: getProduct,\n          quantity: getCount,\n        };\n\n        const query = \"?\" + queryString.stringify(params);\n\n        const response = await CartAPI.putToCart(query);\n        console.log(response);\n      };\n\n      fetchPut();\n\n      //Sau đó thay đổi state loadAPI và load lại hàm useEffect\n      setLoadAPI(true);\n\n      console.log(\"Ban Da Dang Nhap!\");\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n    } else {\n      //Nếu không có phiên làm việc của Session User thì mình sẽ xử lý với Redux\n      const data = {\n        _id: getProduct,\n        idUser: getUser,\n        quantity: getCount,\n      };\n\n      //Đưa dữ liệu vào Redux\n      const action = updateCart(data);\n      dispatch(action);\n\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\n\n      //set state loadRedux để nó load lại hàm useEffect để tiếp tục lấy dữ liệu từ redux\n      setLoadRedux({\n        _id: getProduct,\n        quantity: getCount,\n      });\n    }\n  };\n\n  //Hàm này dùng để redirect đến page checkout\n  const [redirect, setRedirect] = useState(false);\n\n  const onCheckout = () => {\n    if (!localStorage.getItem(\"id_user\")) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Đăng Nhập!\");\n      return;\n    }\n\n    if (cart.length === 0) {\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Giỏ Hàng!\");\n      return;\n    }\n    const checkNumberOfProducts = async () => {\n      const idUser = localStorage.getItem(\"id_user\");\n      const data = { id: idUser };\n      const response = await CartAPI.postCheckNumberProduct(data);\n      if (!response.success) {\n        setMessage(response.message);\n        return;\n      }\n      setMessage();\n      setRedirect(true);\n    };\n    checkNumberOfProducts();\n  };\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Cart</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    Cart\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"py-5\">\n        <h2 className=\"h5 text-uppercase mb-4\">Shopping cart</h2>\n        <div className=\"row\">\n          <div className=\"col-lg-8 mb-4 mb-lg-0\">\n            <ListCart\n              listCart={cart}\n              onDeleteCart={onDeleteCart}\n              onUpdateCount={onUpdateCount}\n            />\n            {message && <p style={{ color: \"red\" }}>** {message}</p>}\n            <div className=\"bg-light px-4 py-3\">\n              <div className=\"row align-items-center text-center\">\n                <div className=\"col-md-6 mb-3 mb-md-0 text-md-left\">\n                  <Link\n                    className=\"btn btn-link p-0 text-dark btn-sm\"\n                    to={`/shop`}\n                  >\n                    <i className=\"fas fa-long-arrow-alt-left mr-2\"> </i>\n                    Continue shopping\n                  </Link>\n                </div>\n                <div className=\"col-md-6 text-md-right\">\n                  {redirect && <Redirect to={\"/checkout\"} />}\n                  <span\n                    className=\"btn btn-outline-dark btn-sm\"\n                    onClick={onCheckout}\n                  >\n                    Proceed to checkout\n                    <i className=\"fas fa-long-arrow-alt-right ml-2\"></i>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\">\n            <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n              <div className=\"card-body\">\n                <h5 className=\"text-uppercase mb-4\">Cart total</h5>\n                <ul className=\"list-unstyled mb-0\">\n                  <li className=\"d-flex align-items-center justify-content-between\">\n                    <strong className=\"text-uppercase small font-weight-bold\">\n                      Subtotal\n                    </strong>\n                    <span className=\"text-muted small\">\n                      {convertMoney(total)} VND\n                    </span>\n                  </li>\n                  <li className=\"border-bottom my-2\"></li>\n                  <li className=\"d-flex align-items-center justify-content-between mb-4\">\n                    <strong className=\"text-uppercase small font-weight-bold\">\n                      Total\n                    </strong>\n                    <span>{convertMoney(total)} VND</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Cart;\n"],"sourceRoot":""}