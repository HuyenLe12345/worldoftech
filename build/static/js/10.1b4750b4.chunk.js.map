{"version":3,"sources":["API/CartAPI.jsx","Authentication/SignIn.jsx"],"names":["CartAPI","getCarts","query","url","concat","axiosClient","get","postAddToCart","post","deleteToCart","delete","putToCart","put","postCheckNumberProduct","id","SignIn","props","listCart","useSelector","state","Cart","email","setEmail","useState","password","setPassword","errorEmail","setErrorEmail","emailRegex","setEmailRegex","errorPassword","setErrorPassword","error","setError","redirect","setRedirect","checkPush","setCheckPush","dispatch","useDispatch","handleLogout","localStorage","removeItem","useEffect","isSessionExpired","expirationTime","getItem","Date","now","Number","async","i","length","params","idUser","_id","quantity","queryString","stringify","response","console","log","fetchData","_jsx","className","children","_jsxs","type","placeholder","value","onChange","e","target","Redirect","to","onClick","onSubmit","test","String","toLowerCase","validateEmail","UserAPI","postLogin","err","path","message","user","setItem","token","fullname","action","addSession","setTimeout","fetchLogin","Link"],"mappings":"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","file":"static/js/10.1b4750b4.chunk.js","sourcesContent":["import axiosClient from \"./axiosClient\";\n\nconst CartAPI = {\n  getCarts: (query) => {\n    const url = `/carts${query}`;\n    return axiosClient.get(url);\n  },\n\n  postAddToCart: (query) => {\n    const url = `/carts/add${query}`;\n    return axiosClient.post(url);\n  },\n\n  deleteToCart: (query) => {\n    const url = `/carts/delete${query}`;\n    return axiosClient.delete(url);\n  },\n\n  putToCart: (query) => {\n    const url = `/carts/update${query}`;\n    return axiosClient.put(url);\n  },\n  postCheckNumberProduct: (id) => {\n    const url = `/carts/check`;\n    return axiosClient.post(url, id);\n  },\n};\n\nexport default CartAPI;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport { addSession } from \"../Redux/Action/ActionSession\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport CartAPI from \"../API/CartAPI\";\n\nfunction SignIn(props) {\n  //listCart được lấy từ redux\n  const listCart = useSelector((state) => state.Cart.listCart);\n\n  const [email, setEmail] = useState(\"\");\n\n  const [password, setPassword] = useState(\"\");\n\n  // const [user, setUser] = useState([]);\n\n  const [errorEmail, setErrorEmail] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setErrorPassword] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [redirect, setRedirect] = useState(false);\n\n  const [checkPush, setCheckPush] = useState(false);\n\n  const dispatch = useDispatch();\n  // Function to check if session is expired\n  const isSessionExpired = () => {\n    const expirationTime = localStorage.getItem(\"expiration_time\");\n    return expirationTime && Date.now() > Number(expirationTime);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"id_user\");\n    localStorage.removeItem(\"name_user\");\n    localStorage.removeItem(\"expiration_time\"); // Clear expiration time\n  };\n  useEffect(() => {\n    if (isSessionExpired()) {\n      handleLogout();\n    }\n  }, []);\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onSubmit = () => {\n    if (!email) {\n      setErrorEmail(true);\n      return;\n    } else {\n      if (!password) {\n        setErrorEmail(false);\n        setErrorPassword(true);\n        return;\n      } else {\n        setErrorPassword(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          return;\n        } else {\n          setEmailRegex(false);\n          console.log(\"PASS\");\n          const fetchLogin = async () => {\n            const params = {\n              email: email,\n              password: password,\n            };\n            console.log(\"PARAMS\", params);\n            const query = \"?\" + queryString.stringify(params);\n            const response = await UserAPI.postLogin(query);\n            console.log(\"response\", response);\n            if (response && response.error) {\n              const err = response.error;\n              if (err.path === \"email\") {\n                setErrorEmail(true);\n                setErrorPassword(false);\n                setError(err.message);\n              } else if (err.path === \"password\") {\n                setErrorEmail(false);\n                setErrorPassword(true);\n                setError(err.message);\n              }\n            }\n            if (response && response.message === \"Success\") {\n              const user = response.user;\n              // setUser(user);\n              setErrorEmail(false);\n              setErrorPassword(false);\n              setError(null);\n              setCheckPush(true);\n              localStorage.setItem(\"id_user\", user._id);\n              localStorage.setItem(\"token\", user.token);\n              localStorage.setItem(\"name_user\", user.fullname);\n\n              // Set expiration time for the session\n              const expirationTime = Date.now() + 1 * 60 * 60 * 1000; // 1 hour from now\n              localStorage.setItem(\"expiration_time\", expirationTime);\n              const action = addSession(localStorage.getItem(\"id_user\"));\n\n              dispatch(action);\n              // Clear local storage after expiration\n              setTimeout(() => {\n                handleLogout();\n              }, 1 * 60 * 60 * 1000); // 1 hour\n\n              return;\n            }\n          };\n          fetchLogin();\n        }\n      }\n    }\n  };\n\n  //Hàm này dùng để đưa hết tất cả carts vào API của user\n  useEffect(() => {\n    const fetchData = async () => {\n      //Lần đầu sẽ không thực hiện insert được vì addCart = ''\n      if (checkPush === true) {\n        for (let i = 0; i < listCart.length; i++) {\n          //Nó sẽ lấy idUser và idProduct và count cần thêm để gửi lên server\n          const params = {\n            idUser: localStorage.getItem(\"id_user\"),\n            _id: listCart[i]._id,\n            quantity: listCart[i].quantity,\n          };\n\n          const query = \"?\" + queryString.stringify(params);\n\n          const response = await CartAPI.postAddToCart(query);\n          console.log(response);\n        }\n        console.log(\"move to HOme\");\n        setRedirect(true);\n      }\n    };\n\n    fetchData();\n  }, [checkPush]);\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Sign In</span>\n\n          <div className=\"d-flex justify-content-center pb-5\">\n            {emailRegex && (\n              <span className=\"text-danger\">\n                {error || \"* Incorrect Email Format\"}\n              </span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">\n                {error || \"* Please Check Your Email\"}\n              </span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">\n                {error || \"* Please Check Your Password\"}\n              </span>\n            )}\n          </div>\n\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"text\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={onChangeEmail}\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={onChangePassword}\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            {redirect && <Redirect to=\"/\" />}\n            <button className=\"login100-form-btn\" onClick={onSubmit}>\n              Sign in\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Create an account?</span>\n            &nbsp;\n            <Link to=\"/signup\" className=\"txt2 hov1\">\n              Sign up\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;\n"],"sourceRoot":""}