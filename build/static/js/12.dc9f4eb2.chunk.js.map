{"version":3,"sources":["API/MessengerAPI.jsx","Authentication/SignUp.jsx"],"names":["MessengerAPI","getMessage","query","url","concat","axiosClient","get","postMessage","post","postConversation","SignUp","props","fullname","setFullName","useState","email","setEmail","password","setPassword","phone","setPhone","errorEmail","setEmailError","emailRegex","setEmailRegex","errorPassword","setPasswordError","errorFullname","setFullnameError","errorPhone","setPhoneError","error","setError","success","setSuccess","_jsx","className","children","_jsxs","value","onChange","e","target","type","placeholder","Redirect","to","onClick","preventDefault","test","String","toLowerCase","validateEmail","console","log","async","params","queryString","stringify","response","UserAPI","postSignUp","errors","err","path","msg","fetchSignUp","fetchConversation","Link"],"mappings":"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","file":"static/js/12.dc9f4eb2.chunk.js","sourcesContent":["import axiosClient from './axiosClient';\n\nconst MessengerAPI = {\n\tgetMessage: (query) => {\n\t\tconst url = `/messenger/${query}`;\n\t\treturn axiosClient.get(url);\n\t},\n\n\tpostMessage: (query) => {\n\t\tconst url = `/messenger/send${query}`;\n\t\treturn axiosClient.post(url);\n\t},\n\n\tpostConversation: (query) => {\n\t\tconst url = `/messenger/conversation${query}`;\n\t\treturn axiosClient.post(url);\n\t},\n};\n\nexport default MessengerAPI;\n","import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport UserAPI from \"../API/UserAPI\";\nimport \"./Auth.css\";\nimport queryString from \"query-string\";\nimport MessengerAPI from \"../API/MessengerAPI\";\n\nSignUp.propTypes = {};\n\nfunction SignUp(props) {\n  const [fullname, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const [errorEmail, setEmailError] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setPasswordError] = useState(false);\n  const [errorFullname, setFullnameError] = useState(false);\n  const [errorPhone, setPhoneError] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [success, setSuccess] = useState(false);\n\n  const onChangeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const handlerSignUp = (e) => {\n    e.preventDefault();\n\n    if (!fullname) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setEmailRegex(false);\n      return;\n    } else {\n      setFullnameError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setFullnameError(false);\n      setEmailRegex(false);\n\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setPasswordError(false);\n        return;\n      } else {\n        setEmailError(false);\n        setPhoneError(false);\n        setPasswordError(false);\n        setFullnameError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setPasswordError(false);\n          return;\n        } else {\n          setEmailRegex(false);\n\n          if (!password) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setPasswordError(true);\n            return;\n          } else {\n            setFullnameError(false);\n            setPhoneError(false);\n            setPasswordError(false);\n            setFullnameError(false);\n            setEmailRegex(false);\n\n            if (!phone) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(true);\n              setPasswordError(false);\n            } else {\n              console.log(\"Thanh Cong\");\n\n              const fetchSignUp = async () => {\n                const params = {\n                  fullname: fullname,\n                  email: email,\n                  password: password,\n                  phone: phone,\n                };\n\n                const query = \"?\" + queryString.stringify(params);\n\n                const response = await UserAPI.postSignUp(query);\n\n                if (response && response.errors) {\n                  const err = response.errors;\n                  if (err.path === \"email\") {\n                    setEmailError(true);\n                    setPhoneError(false);\n                    setPasswordError(false);\n                    setFullnameError(false);\n                    setFullnameError(false);\n                    setEmailRegex(false);\n                    setError(err.msg);\n\n                    return null;\n                  } else if (err.path === \"password\") {\n                    setEmailError(false);\n                    setPhoneError(false);\n                    setPasswordError(true);\n                    setFullnameError(false);\n                    setFullnameError(false);\n                    setEmailRegex(false);\n                    setError(err.msg);\n                    return null;\n                  }\n                }\n\n                setSuccess(true);\n              };\n              fetchSignUp();\n\n              // Hàm này dùng để tạo các conversation cho user và admin\n              const fetchConversation = async () => {\n                const params = {\n                  email: email,\n                  password: password,\n                };\n\n                const query = \"?\" + queryString.stringify(params);\n\n                const response = await MessengerAPI.postConversation(query);\n                console.log(response);\n              };\n\n              fetchConversation();\n            }\n          }\n        }\n      }\n    }\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Sign Up</span>\n          <div className=\"d-flex justify-content-center pb-5\">\n            {errorFullname && (\n              <span className=\"text-danger\">\n                {\"* Please Check Your Full Name!\"}\n              </span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">\n                {error || \"* Please Check Your Email!\"}\n              </span>\n            )}\n            {emailRegex && (\n              <span className=\"text-danger\">* Incorrect Email Format</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">\n                {error || \"* Please Check Your Password!\"}\n              </span>\n            )}\n            {errorPhone && (\n              <span className=\"text-danger\">\n                * Please Check Your Phone Number!\n              </span>\n            )}\n          </div>\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              value={fullname}\n              onChange={onChangeName}\n              type=\"text\"\n              placeholder=\"Full Name\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={email}\n              onChange={onChangeEmail}\n              type=\"text\"\n              placeholder=\"Email\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={password}\n              onChange={onChangePassword}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={phone}\n              onChange={onChangePhone}\n              type=\"text\"\n              placeholder=\"Phone\"\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            {success && <Redirect to={\"/signin\"} />}\n            <button className=\"login100-form-btn\" onClick={handlerSignUp}>\n              Sign Up\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Login?</span>\n            &nbsp;\n            <Link to=\"/signin\" className=\"txt2 hov1\">\n              Click\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n"],"sourceRoot":""}